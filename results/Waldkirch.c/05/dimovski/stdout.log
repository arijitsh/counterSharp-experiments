
Abstract Syntax:
[ 1:]
int main( ):
[ 2:] $2{x} := [-5,4]
[ 3:] input:
[ 4:] while [ 5:] ( $2{x} >= 0 ) do
[ 6:]   $2{x} := $2{x} - 1
[ 7:]
      od
[ 8:] assert( $2{x} >= -1 )
[ 9:] $1{$1} := 0
[10:] return
[11:]
polyhedra

Forward Analysis:
[ 1:]: top
[ 2:]: top
[ 3:]: $2{x} >= -5 && -$2{x} >= -4
[ 4:]: $2{x} >= -5 && -$2{x} >= -4
[ 5:] unwind 0: $2{x} >= -5 && -$2{x} >= -4
[ 5:] unwind 1: $2{x} >= -5 && -$2{x} >= -4
[ 5:] unwind >1: $2{x} >= -1 && -$2{x} >= -3
[ 6:]: $2{x} >= 0 && -$2{x} >= -4
[ 7:]: $2{x} >= -1 && -$2{x} >= -3
[ 8:]: $2{x} >= -5 && -$2{x} >= 1
[ 9:]: $2{x} == -1
[10:]: $1{$1} == 0 && $2{x} == -1
[11:]: bottom
x 
Backward OverApproximating Analysis Sat :
[11:]: top
[10:]: bottom
[ 9:]: bottom
[ 8:]: $2{x} == -1
[ 7:]: $2{x} >= -1 && -$2{x} >= -4
[ 6:]: $2{x} >= 0 && -$2{x} >= -4
[ 5:] unwind >1: $2{x} >= -1 && -$2{x} >= -4
[ 5:] unwind 1: $2{x} >= -1 && -$2{x} >= -4
[ 5:] unwind 0: $2{x} >= -1 && -$2{x} >= -4
[ 4:]: $2{x} >= -1 && -$2{x} >= -4
[ 3:]: $2{x} >= -1 && -$2{x} >= -4
[ 2:]: top
[ 1:]: top
x 
Backward OverApproximating Analysis Viol :
[11:]: top
[10:]: bottom
[ 9:]: bottom
[ 8:]: $2{x} >= -5 && -$2{x} >= 2
[ 7:]: $2{x} >= -5 && -$2{x} >= 2
[ 6:]: bottom
[ 5:] unwind >1: $2{x} >= -5 && -$2{x} >= 2
[ 5:] unwind 1: $2{x} >= -5 && -$2{x} >= 2
[ 5:] unwind 0: $2{x} >= -5 && -$2{x} >= 2
[ 4:]: $2{x} >= -5 && -$2{x} >= 2
[ 3:]: $2{x} >= -5 && -$2{x} >= 2
[ 2:]: top
[ 1:]: top
Analysis Result: 
PROBABLITY OF SATISFACTION: 0.6001 percent 
PROBABLITY OF VIOLATION: 0.4001 percent 
Total Time: 0.006235 s
Analysis Time: 0.005622 s
Probability Time: 0.000614 s
Done.
