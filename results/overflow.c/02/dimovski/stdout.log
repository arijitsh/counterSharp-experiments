
Abstract Syntax:
[ 1:]
int main( ):
[ 2:] $2{x1} := [-1073741824,2147483647]
[ 3:] input:
[ 4:] if ( $2{x1} < 0 ) then
[ 5:]   $2{x1} := $2{x1} - 1073741824
[ 6:]
      else
[ 7:]   $2{x1} := $2{x1} + 1073741824
[ 8:]
      endif
[ 9:] assert( $2{x1} < 0 )
[10:]
polyhedra

Forward Analysis:
[ 1:]: top
[ 2:]: top
[ 3:]: $2{x1} >= -1073741824 && -$2{x1} >= -2147483647
[ 4:]: $2{x1} >= -1073741824 && -$2{x1} >= -2147483647
[ 5:]: $2{x1} >= -1073741824 && -$2{x1} >= 1
[ 6:]: $2{x1} >= -2147483648 && -$2{x1} >= 1073741825
[ 7:]: $2{x1} >= 0 && -$2{x1} >= -2147483647
[ 8:]: $2{x1} >= 1073741824 && -$2{x1} >= -3221225471
[ 9:]: $2{x1} >= -2147483648 && -$2{x1} >= -3221225471
[10:]: $2{x1} >= -2147483648 && -$2{x1} >= 1
x1 
Backward OverApproximating Analysis Sat :
[10:]: top
[ 9:]: $2{x1} >= -2147483648 && -$2{x1} >= 1
[ 8:]: $2{x1} >= -2147483648 && -$2{x1} >= 1
[ 7:]: bottom
[ 6:]: $2{x1} >= -2147483648 && -$2{x1} >= 1
[ 5:]: $2{x1} >= -1073741824 && -$2{x1} >= 1
[ 4:]: $2{x1} >= -1073741824 && -$2{x1} >= 1
[ 3:]: $2{x1} >= -1073741824 && -$2{x1} >= 1
[ 2:]: top
[ 1:]: top
x1 
Backward OverApproximating Analysis Viol :
[10:]: top
[ 9:]: $2{x1} >= 0 && -$2{x1} >= -3221225471
[ 8:]: $2{x1} >= 0 && -$2{x1} >= -3221225471
[ 7:]: $2{x1} >= 0 && -$2{x1} >= -2147483647
[ 6:]: $2{x1} >= 0 && -$2{x1} >= -3221225471
[ 5:]: bottom
[ 4:]: $2{x1} >= 0 && -$2{x1} >= -2147483647
[ 3:]: $2{x1} >= 0 && -$2{x1} >= -2147483647
[ 2:]: top
[ 1:]: top
Analysis Result: 
PROBABLITY OF SATISFACTION: 0.3334 percent 
PROBABLITY OF VIOLATION: 0.6667 percent 
Total Time: 0.003467 s
Analysis Time: 0.002968 s
Probability Time: 0.000499 s
Done.
