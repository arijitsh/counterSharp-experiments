** counterSharp **
** AMM **
c ApproxMC SHA revision 4648f20bf454cfc55b606142dd974bed44750e1a
c ApproxMC version 4.0.1
c ApproxMC compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -fvisibility=hidden -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -fvisibility=hidden -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DBOOST_TEST_DYN_LINK | STATICCOMPILE = OFF | Boost_FOUND = TRUE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | GMP_FOUND = TRUE | ENABLE_ASSERTIONS = ON | MY_TARGETS =  | compilation date time = Aug 17 2020 10:12:40
c ApproxMC compiled with gcc version 9.3.0
c CryptoMiniSat version 5.8.0
c CMS Copyright (C) 2009-2020 Authors of CryptoMiniSat, see AUTHORS file
c CMS SHA revision a11dd3a5ac4d2de6bcb9edcb853b8abb6ecdd61f
c CMS is GPL licensed due to M4RI being linked. Build without M4RI to get MIT version
c Using VMTF code by Armin Biere from CaDiCaL
c Using Yalsat by Armin Biere, see Balint et al. Improving implementation of SLS solvers [...], SAT'14
c Using WalkSAT by Henry Kautz, see Kautz and Selman Pushing the envelope: planning, propositional logic, and stochastic search, AAAI'96,
c Using code from 'When Boolean Satisfiability Meets Gauss-E. in a Simplex Way'
c       by C.-S. Han and J.-H. Roland Jiang in CAV 2012. Fixes by M. Soos
c Using CCAnr from 'CCAnr: A Conf. Checking Based Local Search Solver [...]'
c       by Shaowei Cai, Chuan Luo, and Kaile Su, SAT 2015
c CMS compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -fvisibility=hidden -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -Wno-class-memaccess -mpopcnt -msse4.2 -ggdb3 -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DEXTENDED_FEATURES -DUSE_GAUSS -DBOOST_TEST_DYN_LINK -DUSE_ZLIB -DYALSAT_FPU -DUSE_M4RI | STATICCOMPILE = OFF | ONLY_SIMPLE = OFF | Boost_FOUND = TRUE | STATS = OFF | SQLITE3_FOUND = FALSE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | ENABLE_TESTING = OFF | M4RI_FOUND = TRUE | NOM4RI = OFF | SLOW_DEBUG = OFF | ENABLE_ASSERTIONS = ON | PYTHON_EXECUTABLE = PYTHON_EXECUTABLE-NOTFOUND | PYTHON_LIBRARY = PYTHON_LIBRARY-NOTFOUND | PYTHON_INCLUDE_DIRS =  | MY_TARGETS =  | LARGEMEM = OFF | LIMITMEM = OFF | BREAKID_LIBRARIES =  | BREAKID-VER = . | BOSPHORUS_LIBRARIES =  | BOSPH-VER = . | compilation date time = Aug 17 2020 10:07:40
c CMS compiled with gcc version 9.3.0
c executed with command line: approxmc --sparse 1 /home/steuber/Dokumente/Bench/FP/experiments/results/Problem10_16.c/03/amm.dimacs
c -- header says num vars:          62130
c -- header says num clauses:      521849
c WARNING: Empty line at line number 553477 -- this is not part of the DIMACS specifications (http://www.satcompetition.org/2009/format-benchmarks2009.html). Ignoring.
c -- clauses added: 521849
c -- xor clauses added: 0
c -- vars added 62130
c [appmc] Sampling set size: 128
c [appmc] Sampling var set contains over 100 variables, not displaying
c [sparse] Using match: 2 sampling set size: 128 prev end inclusive is: 100 this end inclusive is: 150 next end inclusive is: 200 sampl size: 128
c [appmc] threshold set to 80 sparse: 1
c [appmc] Starting up, initial measurement
c [appmc] Starting at hash count: 1
c [appmc] [    0.00 ] round:  0 hashes:      1
c [appmc] [    0.00 ] bounded_sol_count looking for   81 solutions -- hashes active: 1
c [appmc] [    3.64 ] round:  0 hashes:      2
c [appmc] [    3.64 ] bounded_sol_count looking for   81 solutions -- hashes active: 2
c [appmc] [    4.34 ] round:  0 hashes:      4
c [appmc] [    4.34 ] bounded_sol_count looking for   81 solutions -- hashes active: 4
c [appmc] [    5.36 ] round:  0 hashes:      8
c [appmc] [    5.36 ] bounded_sol_count looking for   81 solutions -- hashes active: 8
c [appmc] [    6.59 ] round:  0 hashes:     16
c [appmc] [    6.59 ] bounded_sol_count looking for   81 solutions -- hashes active: 16
c [appmc] [    7.93 ] round:  0 hashes:     32
c [appmc] [    7.93 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [    9.43 ] round:  0 hashes:     64
c [appmc] [    9.43 ] bounded_sol_count looking for   81 solutions -- hashes active: 64
c [appmc] [   10.87 ] round:  0 hashes:     96
c [appmc] [   10.87 ] bounded_sol_count looking for   81 solutions -- hashes active: 96
c [appmc] [   12.32 ] round:  0 hashes:    112
c [appmc] [   12.32 ] bounded_sol_count looking for   81 solutions -- hashes active: 112
c [appmc] [   13.78 ] round:  0 hashes:    120
c [appmc] [   13.78 ] bounded_sol_count looking for   81 solutions -- hashes active: 120
c [appmc] [   15.22 ] round:  0 hashes:    124
c [appmc] [   15.22 ] bounded_sol_count looking for   81 solutions -- hashes active: 124
c [appmc] [   15.48 ] round:  0 hashes:    122
c [appmc] [   15.48 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   16.14 ] round:  0 hashes:    121
c [appmc] [   16.14 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   26.01 ] round:  1 hashes:    122
c [appmc] [   26.01 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   27.18 ] round:  1 hashes:    121
c [appmc] [   27.18 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   31.84 ] round:  2 hashes:    122
c [appmc] [   31.84 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   33.00 ] round:  2 hashes:    121
c [appmc] [   33.00 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   35.09 ] round:  3 hashes:    122
c [appmc] [   35.09 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   36.30 ] round:  3 hashes:    121
c [appmc] [   36.30 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   38.31 ] round:  4 hashes:    122
c [appmc] [   38.31 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   39.54 ] round:  4 hashes:    121
c [appmc] [   39.54 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   41.27 ] round:  5 hashes:    122
c [appmc] [   41.27 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   42.56 ] round:  5 hashes:    121
c [appmc] [   42.56 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   44.33 ] round:  6 hashes:    122
c [appmc] [   44.33 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   45.65 ] round:  6 hashes:    121
c [appmc] [   45.65 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   47.37 ] round:  7 hashes:    122
c [appmc] [   47.37 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   48.71 ] round:  7 hashes:    121
c [appmc] [   48.71 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] simplifying
c [appmc] [   50.40 ] round:  8 hashes:    122
c [appmc] [   50.40 ] bounded_sol_count looking for   81 solutions -- hashes active: 122
c [appmc] [   51.77 ] round:  8 hashes:    121
c [appmc] [   51.77 ] bounded_sol_count looking for   81 solutions -- hashes active: 121
c [appmc] FINISHED ApproxMC T: 52.12 s
c [appmc] Number of solutions is: 64*2**122
s mc 340282366920938463463374607431768211456
** AMH **
c ApproxMC SHA revision 4648f20bf454cfc55b606142dd974bed44750e1a
c ApproxMC version 4.0.1
c ApproxMC compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -fvisibility=hidden -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -fvisibility=hidden -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DBOOST_TEST_DYN_LINK | STATICCOMPILE = OFF | Boost_FOUND = TRUE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | GMP_FOUND = TRUE | ENABLE_ASSERTIONS = ON | MY_TARGETS =  | compilation date time = Aug 17 2020 10:12:40
c ApproxMC compiled with gcc version 9.3.0
c CryptoMiniSat version 5.8.0
c CMS Copyright (C) 2009-2020 Authors of CryptoMiniSat, see AUTHORS file
c CMS SHA revision a11dd3a5ac4d2de6bcb9edcb853b8abb6ecdd61f
c CMS is GPL licensed due to M4RI being linked. Build without M4RI to get MIT version
c Using VMTF code by Armin Biere from CaDiCaL
c Using Yalsat by Armin Biere, see Balint et al. Improving implementation of SLS solvers [...], SAT'14
c Using WalkSAT by Henry Kautz, see Kautz and Selman Pushing the envelope: planning, propositional logic, and stochastic search, AAAI'96,
c Using code from 'When Boolean Satisfiability Meets Gauss-E. in a Simplex Way'
c       by C.-S. Han and J.-H. Roland Jiang in CAV 2012. Fixes by M. Soos
c Using CCAnr from 'CCAnr: A Conf. Checking Based Local Search Solver [...]'
c       by Shaowei Cai, Chuan Luo, and Kaile Su, SAT 2015
c CMS compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -fvisibility=hidden -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -Wno-class-memaccess -mpopcnt -msse4.2 -ggdb3 -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DEXTENDED_FEATURES -DUSE_GAUSS -DBOOST_TEST_DYN_LINK -DUSE_ZLIB -DYALSAT_FPU -DUSE_M4RI | STATICCOMPILE = OFF | ONLY_SIMPLE = OFF | Boost_FOUND = TRUE | STATS = OFF | SQLITE3_FOUND = FALSE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | ENABLE_TESTING = OFF | M4RI_FOUND = TRUE | NOM4RI = OFF | SLOW_DEBUG = OFF | ENABLE_ASSERTIONS = ON | PYTHON_EXECUTABLE = PYTHON_EXECUTABLE-NOTFOUND | PYTHON_LIBRARY = PYTHON_LIBRARY-NOTFOUND | PYTHON_INCLUDE_DIRS =  | MY_TARGETS =  | LARGEMEM = OFF | LIMITMEM = OFF | BREAKID_LIBRARIES =  | BREAKID-VER = . | BOSPHORUS_LIBRARIES =  | BOSPH-VER = . | compilation date time = Aug 17 2020 10:07:40
c CMS compiled with gcc version 9.3.0
c executed with command line: approxmc --sparse 1 /home/steuber/Dokumente/Bench/FP/experiments/results/Problem10_16.c/03/amh.dimacs
c -- header says num vars:          62130
c -- header says num clauses:      521849
c WARNING: Empty line at line number 553477 -- this is not part of the DIMACS specifications (http://www.satcompetition.org/2009/format-benchmarks2009.html). Ignoring.
c -- clauses added: 521849
c -- xor clauses added: 0
c -- vars added 62130
c [appmc] Sampling set size: 128
c [appmc] Sampling var set contains over 100 variables, not displaying
c [sparse] Using match: 2 sampling set size: 128 prev end inclusive is: 100 this end inclusive is: 150 next end inclusive is: 200 sampl size: 128
c [appmc] threshold set to 80 sparse: 1
c [appmc] Starting up, initial measurement
c [appmc] Starting at hash count: 1
c [appmc] [    0.00 ] round:  0 hashes:      1
c [appmc] [    0.00 ] bounded_sol_count looking for   81 solutions -- hashes active: 1
c [appmc] [    3.59 ] round:  0 hashes:      2
c [appmc] [    3.59 ] bounded_sol_count looking for   81 solutions -- hashes active: 2
c [appmc] [    4.30 ] round:  0 hashes:      4
c [appmc] [    4.30 ] bounded_sol_count looking for   81 solutions -- hashes active: 4
c [appmc] [    5.49 ] round:  0 hashes:      8
c [appmc] [    5.49 ] bounded_sol_count looking for   81 solutions -- hashes active: 8
c [appmc] [    6.98 ] round:  0 hashes:     16
c [appmc] [    6.98 ] bounded_sol_count looking for   81 solutions -- hashes active: 16
c [appmc] [    8.57 ] round:  0 hashes:     32
c [appmc] [    8.57 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [    9.88 ] round:  0 hashes:     24
c [appmc] [    9.88 ] bounded_sol_count looking for   81 solutions -- hashes active: 24
c [appmc] [   11.18 ] round:  0 hashes:     28
c [appmc] [   11.18 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [   12.63 ] round:  0 hashes:     30
c [appmc] [   12.63 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] [   15.30 ] round:  0 hashes:     31
c [appmc] [   15.30 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] simplifying
c [appmc] [   26.29 ] round:  1 hashes:     31
c [appmc] [   26.29 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   29.91 ] round:  1 hashes:     30
c [appmc] [   29.91 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   35.61 ] round:  2 hashes:     31
c [appmc] [   35.61 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   39.97 ] round:  2 hashes:     32
c [appmc] [   39.97 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] simplifying
c [appmc] [   42.26 ] round:  3 hashes:     32
c [appmc] [   42.26 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [   43.99 ] round:  3 hashes:     31
c [appmc] [   43.99 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   46.20 ] round:  3 hashes:     30
c [appmc] [   46.20 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   47.99 ] round:  4 hashes:     31
c [appmc] [   47.99 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   51.69 ] round:  4 hashes:     30
c [appmc] [   51.69 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   53.86 ] round:  5 hashes:     31
c [appmc] [   53.86 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   57.39 ] round:  5 hashes:     32
c [appmc] [   57.39 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] simplifying
c [appmc] [   58.99 ] round:  6 hashes:     32
c [appmc] [   58.99 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [   60.47 ] round:  6 hashes:     31
c [appmc] [   60.47 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   62.70 ] round:  6 hashes:     30
c [appmc] [   62.70 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   64.60 ] round:  7 hashes:     31
c [appmc] [   64.60 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   68.03 ] round:  7 hashes:     30
c [appmc] [   68.03 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   69.67 ] round:  8 hashes:     31
c [appmc] [   69.67 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   73.75 ] round:  8 hashes:     30
c [appmc] [   73.75 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] FINISHED ApproxMC T: 74.32 s
c [appmc] Number of solutions is: 72*2**31
s mc 154618822656
** ASM **
c ApproxMC SHA revision 4648f20bf454cfc55b606142dd974bed44750e1a
c ApproxMC version 4.0.1
c ApproxMC compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -fvisibility=hidden -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -fvisibility=hidden -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DBOOST_TEST_DYN_LINK | STATICCOMPILE = OFF | Boost_FOUND = TRUE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | GMP_FOUND = TRUE | ENABLE_ASSERTIONS = ON | MY_TARGETS =  | compilation date time = Aug 17 2020 10:12:40
c ApproxMC compiled with gcc version 9.3.0
c CryptoMiniSat version 5.8.0
c CMS Copyright (C) 2009-2020 Authors of CryptoMiniSat, see AUTHORS file
c CMS SHA revision a11dd3a5ac4d2de6bcb9edcb853b8abb6ecdd61f
c CMS is GPL licensed due to M4RI being linked. Build without M4RI to get MIT version
c Using VMTF code by Armin Biere from CaDiCaL
c Using Yalsat by Armin Biere, see Balint et al. Improving implementation of SLS solvers [...], SAT'14
c Using WalkSAT by Henry Kautz, see Kautz and Selman Pushing the envelope: planning, propositional logic, and stochastic search, AAAI'96,
c Using code from 'When Boolean Satisfiability Meets Gauss-E. in a Simplex Way'
c       by C.-S. Han and J.-H. Roland Jiang in CAV 2012. Fixes by M. Soos
c Using CCAnr from 'CCAnr: A Conf. Checking Based Local Search Solver [...]'
c       by Shaowei Cai, Chuan Luo, and Kaile Su, SAT 2015
c CMS compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -fvisibility=hidden -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -Wno-class-memaccess -mpopcnt -msse4.2 -ggdb3 -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DEXTENDED_FEATURES -DUSE_GAUSS -DBOOST_TEST_DYN_LINK -DUSE_ZLIB -DYALSAT_FPU -DUSE_M4RI | STATICCOMPILE = OFF | ONLY_SIMPLE = OFF | Boost_FOUND = TRUE | STATS = OFF | SQLITE3_FOUND = FALSE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | ENABLE_TESTING = OFF | M4RI_FOUND = TRUE | NOM4RI = OFF | SLOW_DEBUG = OFF | ENABLE_ASSERTIONS = ON | PYTHON_EXECUTABLE = PYTHON_EXECUTABLE-NOTFOUND | PYTHON_LIBRARY = PYTHON_LIBRARY-NOTFOUND | PYTHON_INCLUDE_DIRS =  | MY_TARGETS =  | LARGEMEM = OFF | LIMITMEM = OFF | BREAKID_LIBRARIES =  | BREAKID-VER = . | BOSPHORUS_LIBRARIES =  | BOSPH-VER = . | compilation date time = Aug 17 2020 10:07:40
c CMS compiled with gcc version 9.3.0
c executed with command line: approxmc --sparse 1 /home/steuber/Dokumente/Bench/FP/experiments/results/Problem10_16.c/03/asm.dimacs
c -- header says num vars:          62131
c -- header says num clauses:      521852
c WARNING: Empty line at line number 553480 -- this is not part of the DIMACS specifications (http://www.satcompetition.org/2009/format-benchmarks2009.html). Ignoring.
c -- clauses added: 521852
c -- xor clauses added: 0
c -- vars added 62131
c [appmc] Sampling set size: 128
c [appmc] Sampling var set contains over 100 variables, not displaying
c [sparse] Using match: 2 sampling set size: 128 prev end inclusive is: 100 this end inclusive is: 150 next end inclusive is: 200 sampl size: 128
c [appmc] threshold set to 80 sparse: 1
c [appmc] Starting up, initial measurement
c [appmc] Starting at hash count: 1
c [appmc] [    0.00 ] round:  0 hashes:      1
c [appmc] [    0.00 ] bounded_sol_count looking for   81 solutions -- hashes active: 1
c [appmc] [    3.61 ] round:  0 hashes:      2
c [appmc] [    3.61 ] bounded_sol_count looking for   81 solutions -- hashes active: 2
c [appmc] [    4.61 ] round:  0 hashes:      4
c [appmc] [    4.61 ] bounded_sol_count looking for   81 solutions -- hashes active: 4
c [appmc] [    6.36 ] round:  0 hashes:      8
c [appmc] [    6.36 ] bounded_sol_count looking for   81 solutions -- hashes active: 8
c [appmc] [    8.26 ] round:  0 hashes:     16
c [appmc] [    8.26 ] bounded_sol_count looking for   81 solutions -- hashes active: 16
c [appmc] [   10.42 ] round:  0 hashes:     32
c [appmc] [   10.42 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [   12.01 ] round:  0 hashes:     24
c [appmc] [   12.01 ] bounded_sol_count looking for   81 solutions -- hashes active: 24
c [appmc] [   13.96 ] round:  0 hashes:     28
c [appmc] [   13.96 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [   15.67 ] round:  0 hashes:     30
c [appmc] [   15.67 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] [   18.25 ] round:  0 hashes:     31
c [appmc] [   18.26 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] simplifying
c [appmc] [   33.84 ] round:  1 hashes:     31
c [appmc] [   33.84 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   37.52 ] round:  1 hashes:     30
c [appmc] [   37.52 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   45.18 ] round:  2 hashes:     31
c [appmc] [   45.18 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   50.22 ] round:  2 hashes:     30
c [appmc] [   50.23 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   52.80 ] round:  3 hashes:     31
c [appmc] [   52.80 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   56.18 ] round:  3 hashes:     30
c [appmc] [   56.18 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   59.16 ] round:  4 hashes:     31
c [appmc] [   59.16 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   62.75 ] round:  4 hashes:     30
c [appmc] [   62.75 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   64.64 ] round:  5 hashes:     31
c [appmc] [   64.64 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   68.16 ] round:  5 hashes:     30
c [appmc] [   68.16 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   70.41 ] round:  6 hashes:     31
c [appmc] [   70.41 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   74.32 ] round:  6 hashes:     30
c [appmc] [   74.32 ] bounded_sol_count looking for   81 solutions -- hashes active: 30
c [appmc] simplifying
c [appmc] [   75.77 ] round:  7 hashes:     31
c [appmc] [   75.77 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] [   80.59 ] round:  7 hashes:     32
c [appmc] [   80.59 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] simplifying
c [appmc] [   82.47 ] round:  8 hashes:     32
c [appmc] [   82.47 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [   85.35 ] round:  8 hashes:     31
c [appmc] [   85.35 ] bounded_sol_count looking for   81 solutions -- hashes active: 31
c [appmc] FINISHED ApproxMC T: 87.44 s
c [appmc] Number of solutions is: 77*2**31
s mc 165356240896
** ASH **
c ApproxMC SHA revision 4648f20bf454cfc55b606142dd974bed44750e1a
c ApproxMC version 4.0.1
c ApproxMC compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -fvisibility=hidden -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -fvisibility=hidden -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DBOOST_TEST_DYN_LINK | STATICCOMPILE = OFF | Boost_FOUND = TRUE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | GMP_FOUND = TRUE | ENABLE_ASSERTIONS = ON | MY_TARGETS =  | compilation date time = Aug 17 2020 10:12:40
c ApproxMC compiled with gcc version 9.3.0
c CryptoMiniSat version 5.8.0
c CMS Copyright (C) 2009-2020 Authors of CryptoMiniSat, see AUTHORS file
c CMS SHA revision a11dd3a5ac4d2de6bcb9edcb853b8abb6ecdd61f
c CMS is GPL licensed due to M4RI being linked. Build without M4RI to get MIT version
c Using VMTF code by Armin Biere from CaDiCaL
c Using Yalsat by Armin Biere, see Balint et al. Improving implementation of SLS solvers [...], SAT'14
c Using WalkSAT by Henry Kautz, see Kautz and Selman Pushing the envelope: planning, propositional logic, and stochastic search, AAAI'96,
c Using code from 'When Boolean Satisfiability Meets Gauss-E. in a Simplex Way'
c       by C.-S. Han and J.-H. Roland Jiang in CAV 2012. Fixes by M. Soos
c Using CCAnr from 'CCAnr: A Conf. Checking Based Local Search Solver [...]'
c       by Shaowei Cai, Chuan Luo, and Kaile Su, SAT 2015
c CMS compilation env CMAKE_CXX_COMPILER = /usr/bin/c++ | CMAKE_CXX_FLAGS =  -fvisibility=hidden -Wall -Wextra -Wunused -Wsign-compare -fno-omit-frame-pointer -Wtype-limits -Wuninitialized -Wno-deprecated -Wstrict-aliasing -Wpointer-arith -Wpointer-arith -Wformat-nonliteral -Winit-self -Wparentheses -Wunreachable-code -g -Wno-class-memaccess -mpopcnt -msse4.2 -ggdb3 -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wshadow -Wformat=2 -Wextra-semi -pedantic | COMPILE_DEFINES =  -DEXTENDED_FEATURES -DUSE_GAUSS -DBOOST_TEST_DYN_LINK -DUSE_ZLIB -DYALSAT_FPU -DUSE_M4RI | STATICCOMPILE = OFF | ONLY_SIMPLE = OFF | Boost_FOUND = TRUE | STATS = OFF | SQLITE3_FOUND = FALSE | ZLIB_FOUND = TRUE | VALGRIND_FOUND =  | ENABLE_TESTING = OFF | M4RI_FOUND = TRUE | NOM4RI = OFF | SLOW_DEBUG = OFF | ENABLE_ASSERTIONS = ON | PYTHON_EXECUTABLE = PYTHON_EXECUTABLE-NOTFOUND | PYTHON_LIBRARY = PYTHON_LIBRARY-NOTFOUND | PYTHON_INCLUDE_DIRS =  | MY_TARGETS =  | LARGEMEM = OFF | LIMITMEM = OFF | BREAKID_LIBRARIES =  | BREAKID-VER = . | BOSPHORUS_LIBRARIES =  | BOSPH-VER = . | compilation date time = Aug 17 2020 10:07:40
c CMS compiled with gcc version 9.3.0
c executed with command line: approxmc --sparse 1 /home/steuber/Dokumente/Bench/FP/experiments/results/Problem10_16.c/03/ash.dimacs
c -- header says num vars:          62131
c -- header says num clauses:      521852
c WARNING: Empty line at line number 553480 -- this is not part of the DIMACS specifications (http://www.satcompetition.org/2009/format-benchmarks2009.html). Ignoring.
c -- clauses added: 521852
c -- xor clauses added: 0
c -- vars added 62131
c [appmc] Sampling set size: 128
c [appmc] Sampling var set contains over 100 variables, not displaying
c [sparse] Using match: 2 sampling set size: 128 prev end inclusive is: 100 this end inclusive is: 150 next end inclusive is: 200 sampl size: 128
c [appmc] threshold set to 80 sparse: 1
c [appmc] Starting up, initial measurement
c [appmc] Starting at hash count: 1
c [appmc] [    0.00 ] round:  0 hashes:      1
c [appmc] [    0.00 ] bounded_sol_count looking for   81 solutions -- hashes active: 1
c [appmc] [    5.33 ] round:  0 hashes:      2
c [appmc] [    5.33 ] bounded_sol_count looking for   81 solutions -- hashes active: 2
c [appmc] [    6.58 ] round:  0 hashes:      4
c [appmc] [    6.58 ] bounded_sol_count looking for   81 solutions -- hashes active: 4
c [appmc] [    9.28 ] round:  0 hashes:      8
c [appmc] [    9.28 ] bounded_sol_count looking for   81 solutions -- hashes active: 8
c [appmc] [   11.91 ] round:  0 hashes:     16
c [appmc] [   11.91 ] bounded_sol_count looking for   81 solutions -- hashes active: 16
c [appmc] [   16.74 ] round:  0 hashes:     32
c [appmc] [   16.74 ] bounded_sol_count looking for   81 solutions -- hashes active: 32
c [appmc] [   19.05 ] round:  0 hashes:     24
c [appmc] [   19.05 ] bounded_sol_count looking for   81 solutions -- hashes active: 24
c [appmc] [   33.91 ] round:  0 hashes:     28
c [appmc] [   33.91 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [   56.85 ] round:  0 hashes:     26
c [appmc] [   56.85 ] bounded_sol_count looking for   81 solutions -- hashes active: 26
c [appmc] [   67.97 ] round:  0 hashes:     27
c [appmc] [   67.97 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] simplifying
c [appmc] [   97.42 ] round:  1 hashes:     28
c [appmc] [   97.42 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [  107.60 ] round:  1 hashes:     27
c [appmc] [  107.60 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] simplifying
c [appmc] [  117.79 ] round:  2 hashes:     28
c [appmc] [  117.79 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [  122.58 ] round:  2 hashes:     27
c [appmc] [  122.58 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  129.73 ] round:  2 hashes:     26
c [appmc] [  129.73 ] bounded_sol_count looking for   81 solutions -- hashes active: 26
c [appmc] simplifying
c [appmc] [  133.41 ] round:  3 hashes:     27
c [appmc] [  133.41 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  143.27 ] round:  3 hashes:     28
c [appmc] [  143.27 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] simplifying
c [appmc] [  148.30 ] round:  4 hashes:     28
c [appmc] [  148.30 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [  153.07 ] round:  4 hashes:     27
c [appmc] [  153.07 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  159.96 ] round:  4 hashes:     26
c [appmc] [  159.96 ] bounded_sol_count looking for   81 solutions -- hashes active: 26
c [appmc] simplifying
c [appmc] [  162.11 ] round:  5 hashes:     27
c [appmc] [  162.11 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  173.27 ] round:  5 hashes:     26
c [appmc] [  173.27 ] bounded_sol_count looking for   81 solutions -- hashes active: 26
c [appmc] simplifying
c [appmc] [  174.34 ] round:  6 hashes:     27
c [appmc] [  174.34 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  185.06 ] round:  6 hashes:     28
c [appmc] [  185.06 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] simplifying
c [appmc] [  190.05 ] round:  7 hashes:     28
c [appmc] [  190.05 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] [  194.25 ] round:  7 hashes:     27
c [appmc] [  194.25 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  201.63 ] round:  7 hashes:     26
c [appmc] [  201.63 ] bounded_sol_count looking for   81 solutions -- hashes active: 26
c [appmc] simplifying
c [appmc] [  203.19 ] round:  8 hashes:     27
c [appmc] [  203.19 ] bounded_sol_count looking for   81 solutions -- hashes active: 27
c [appmc] [  212.61 ] round:  8 hashes:     28
c [appmc] [  212.61 ] bounded_sol_count looking for   81 solutions -- hashes active: 28
c [appmc] FINISHED ApproxMC T: 216.15 s
c [appmc] Number of solutions is: 86*2**27
s mc 11542724608
